#! /usr/bin/env python
# encoding: utf-8
# Mattias Fr√•nberg, 2011
# 
# Root configuration file for the waf build system.
#
import os.path

# Declare name and version of the application
VERSION='0.0.1'
APPNAME='rocmdr'

# these variables are mandatory ('/' are converted automatically)
top = '.'
out = 'build'

def options(opt):
	opt.load('compiler_cxx')
	opt.add_option('--test', default="-t", dest='test', type='string')

##
# Configures global options, and sets up the following environment variables:
#
def configure(conf):
    conf.load('compiler_cxx')

    configure_cxxtest(conf)

    conf.recurse("unittests")

## 
# Sets up the following environment variables for cxxtest:
# CXXTESTGEN - The absolute location of cxxtestgen.pl
# CXXTEST_INCLUDE - Include paths for cxxtest
#
def configure_cxxtest(conf):
    # Find perl tool for generating tests
    conf.find_program('perl', var='PERL')
    conf.env.CXXTESTGEN = conf.find_file('cxxtestgen.pl', [os.path.join(conf.path.abspath(), "libs/cxxtest/")])
    conf.env.CXXTEST_INCLUDE = os.path.join(conf.path.abspath(), "libs/cxxtest/")

##
# Builds rocmdr and rocmdrlib.
#
def build(bld):
    bld.recurse("libs programs")

    from waflib import Options
    if "tests" in Options.commands:
        bld.recurse("unittests")
        Options.commands.remove("tests")

##
# Run tests
#
def run_tests(ctx):
    ctx.recurse("unittests")

from waflib.Build import BuildContext
class RunTestCommand(BuildContext):
    cmd = 'run_tests'
    fun = 'run_tests'


